{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "paths": {
        "/api/v1/account": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "tags": [
                    "account"
                ],
                "parameters": [
                    {
                        "description": "Account creation payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.CreateAccountResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "tags": [
                    "account"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.model"
                        }
                    }
                }
            }
        },
        "/api/v1/account/{id}/balance": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Returns the balance and currency for a specific account",
                "tags": [
                    "account"
                ],
                "summary": "Get account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.AccountBalanceResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Updates the balance of a specific account by a given amount",
                "tags": [
                    "account"
                ],
                "summary": "Update account balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Balance update payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.UpdateAccountBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.model"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transfer": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves all transfers (both incoming and outgoing) for a specific account. The account must belong to the authenticated user. You can use the 'direction' query parameter to filter the results:",
                "tags": [
                    "transfer"
                ],
                "summary": "Get all transfers for an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "{'and': [ {'title': { 'cont':'cul' } } ]}",
                        "name": "s",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "fields to select eg: name,age",
                        "name": "fields",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page of pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit of pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "join relations eg: category, parent",
                        "name": "join",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "filters eg: name||eq||ad price||gte||200",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "filters eg: created_at,desc title,asc",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of the account to filter transfers by",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Direction of transfer: incoming, outgoing, or all (default is all)",
                        "name": "direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/transfer.model"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transfer/execute": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Transfers money from one account to another using a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transfer"
                ],
                "summary": "Execute a money transfer between accounts",
                "parameters": [
                    {
                        "description": "Transfer payload",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transfer.CreateTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/transfer.CreateTransferResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/transfer/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Retrieves a single transfer by its UUID",
                "tags": [
                    "transfer"
                ],
                "summary": "Get a transfer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transfer.model"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "item to create",
                        "name": "{object}",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.model"
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token and user info",
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.model"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "uuid of item",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update body",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.model"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Balance of the account.",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency of the account.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the account.",
                    "type": "string"
                }
            }
        },
        "account.CreateAccountRequest": {
            "type": "object",
            "required": [
                "currency"
            ],
            "properties": {
                "balance": {
                    "description": "Initial balance of the account.\nExample: 1000",
                    "type": "integer"
                },
                "currency": {
                    "description": "Currency of the account. Allowed values: USD, EUR, GBP, JPY, EGP, CAD, AUD.\nRequired: true\nExample: USD",
                    "type": "string",
                    "enum": [
                        "USD",
                        "EUR",
                        "GBP",
                        "JPY",
                        "EGP",
                        "CAD",
                        "AUD"
                    ]
                }
            }
        },
        "account.CreateAccountResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "description": "Balance of the account.\nExample: 1000",
                    "type": "integer"
                },
                "created_at": {
                    "description": "CreatedAt is the timestamp when the account was created.\nExample: \"2023-10-01T12:00:00Z\"",
                    "type": "string"
                },
                "currency": {
                    "description": "Currency of the account.\nExample: USD",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the created account.\nExample: \"123e4567-e89b-12d3-a456-426614174000\"",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner of the account.\nExample: \"John Doe\"",
                    "type": "string"
                },
                "user_id": {
                    "description": "UserID of the account owner.\nExample: \"123e4567-e89b-12d3-a456-426614174001\"",
                    "type": "string"
                }
            }
        },
        "account.UpdateAccountBalanceRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                }
            }
        },
        "account.model": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "entries": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Entry"
                    }
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "transfers_from": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transfer"
                    }
                },
                "transfers_to": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transfer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "entries": {
                    "description": "Relationships",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Entry"
                    }
                },
                "id": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "transfers_from": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transfer"
                    }
                },
                "transfers_to": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transfer"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Entry": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.Account"
                },
                "accountID": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "models.Transfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "from_account": {
                    "$ref": "#/definitions/models.Account"
                },
                "from_account_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "to_account": {
                    "$ref": "#/definitions/models.Account"
                },
                "to_account_id": {
                    "type": "string"
                }
            }
        },
        "transfer.CreateTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "from_account_id",
                "to_account_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "from_account_id": {
                    "type": "string"
                },
                "to_account_id": {
                    "type": "string"
                }
            }
        },
        "transfer.CreateTransferResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "from_account_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "to_account_id": {
                    "type": "string"
                }
            }
        },
        "transfer.model": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "from_account": {
                    "$ref": "#/definitions/models.Account"
                },
                "from_account_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "to_account": {
                    "$ref": "#/definitions/models.Account"
                },
                "to_account_id": {
                    "type": "string"
                }
            }
        },
        "user.CreateUserRequest": {
            "description": "Request payload for creating a new user.",
            "type": "object",
            "required": [
                "email",
                "full_name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Email address of the user. Must be a valid email format and unique.\nrequired: true",
                    "type": "string"
                },
                "full_name": {
                    "description": "Full name of the user.\nrequired: true",
                    "type": "string"
                },
                "password": {
                    "description": "Password for the new user. Minimum 6 characters.\nrequired: true",
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "description": "Username for the new user. Must be alphanumeric and unique.\nrequired: true",
                    "type": "string"
                }
            }
        },
        "user.LoginUserRequest": {
            "description": "Request payload for logging in a user.",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password of the user\nrequired: true",
                    "type": "string"
                },
                "username": {
                    "description": "Username of the user\nrequired: true",
                    "type": "string"
                }
            }
        },
        "user.LoginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Access token for the user\nrequired: true",
                    "type": "string"
                },
                "user": {
                    "description": "User information\nrequired: true",
                    "type": "object",
                    "properties": {
                        "email": {
                            "description": "Email of the user\nrequired: true",
                            "type": "string"
                        },
                        "full_name": {
                            "description": "Full name of the user\nrequired: true",
                            "type": "string"
                        },
                        "id": {
                            "description": "ID of the user\nrequired: true",
                            "type": "string"
                        },
                        "username": {
                            "description": "Username of the user\nrequired: true",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "user.model": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "JWT": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}